#version 430 core
#extension GL_ARB_shading_language_include: require
#include </glcommon.h>

layout (local_size_x = G1, local_size_y = G1) in;

void main()
{
  uvec2 ij = gl_GlobalInvocationID.xy;
  uint g_ = ij.x * G + ij.y;

  if (grid_m[g_] > 0)
    grid_v[g_] /= grid_m[g_];

  grid_v[g_].y -= dt * gravity;

  if (ij.x < bound && grid_v[g_].x < 0 ||
      ij.x > G - bound && grid_v[g_].x > 0) {
    grid_v[g_].x = 0;
  }
  if (ij.y < bound && grid_v[g_].y < 0 ||
      ij.y > G - bound && grid_v[g_].y > 0) {
    grid_v[g_].y = 0;
  }
}
